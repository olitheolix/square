name: build

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ master ]

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Download Kubernetes Utilities
        run: |
          mkdir ~/bin
          curl -L --output ~/bin/kubectl https://dl.k8s.io/release/v1.25.5/bin/linux/amd64/kubectl
          curl -L --output ~/bin/kind https://kind.sigs.k8s.io/dl/v0.18.0/kind-linux-amd64
          chmod +x ~/bin/kubectl ~/bin/kind

      - name: Start KinD Cluster
        run: |
          cd ./integration-test-cluster
          ./start_cluster.sh
          cd ..

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv codecov
          pipenv install --system --deploy --dev

      - name: Tests - Linting
        run: isort --check-only ./

      # Break if coverage drops below 100%.
      - name: Tests - Unit and Integration
        run: pytest --cov=square --cov-report=term-missing --cov-report=xml --cov-fail-under=100

      - name: Tests - Static analysis
        run: pipenv run mypy ./

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: true
  windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: 'x64'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv macholib pypiwin32 atomicwrites
          pipenv install --system --deploy --dev
      - name: Run Unit Tests
        run: |
          pytest --cov=square --ignore=tests/test_integration.py

  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --system --deploy --dev
      - name: Run Unit Tests
        run: |
          pytest --cov=square
          pipenv run mypy ./
