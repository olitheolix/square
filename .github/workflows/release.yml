# Create a Github Release and associated binaries.
name: release

on:
  push:
    tags: [ "*" ]

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: ncipollo/release-action@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: false
          prerelease: false

  build-binaries:
    needs: [create-release]
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Set Linux Variables
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: |
          echo "SQUARE_BUILD_PATH=dist/square" >> "$GITHUB_ENV"
          echo "SQUARE_ASSET_NAME=square-${GITHUB_REF_NAME}-linux-amd64" >> "$GITHUB_ENV"

      - name: Set MacOS Variables
        if: matrix.os == 'macos-latest'
        shell: bash
        run: |
          echo "SQUARE_BUILD_PATH=dist/square" >> "$GITHUB_ENV"
          echo "SQUARE_ASSET_NAME=square-${GITHUB_REF_NAME}-darwin-amd64" >> "$GITHUB_ENV"

      - name: Set Windows Variables
        if: matrix.os == 'windows-latest'
        shell: bash
        run: |
          echo "SQUARE_BUILD_PATH=dist/square.exe"  >> "$GITHUB_ENV"
          echo "SQUARE_ASSET_NAME=square-${GITHUB_REF_NAME}-windows-amd64"  >> "$GITHUB_ENV"

      - name: Install Pipenv
        run: |
          python -m pip install --upgrade pip
          pip install pipenv pyinstaller==5.13

      - name: Install extra dependencies (Windows only)
        if: matrix.os == 'windows-latest'
        run: |
          pip install macholib pypiwin32 atomicwrites

      - name: Build Binary
        run: |
          pipenv install --system --deploy --dev
          pyinstaller square.spec --clean
          dist/square version

      - name: Upload Asset
        uses: shogo82148/actions-upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ${{ env.SQUARE_BUILD_PATH }}
          asset_name: ${{ env.SQUARE_ASSET_NAME }}
          asset_content_type: application/binary
