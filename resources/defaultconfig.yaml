# Square configuration Syntax.
version: v0.1

kubeconfig: /some/where
kubecontext: null
folder: ./

priorities:
  # Custom Resources should come first.
  - CustomResourceDefinition

  # Commone non-namespaced resources.
  - ClusterRole
  - ClusterRoleBinding

  # Namespaces must come before any namespaced resources,
  - Namespace

  # Configuration and PVC before Deployments & friends use them.
  - ConfigMap
  - PersistentVolumeClaim
  - Secret

  # RBAC.
  - Role
  - RoleBinding
  - ServiceAccount

  # Define Services before creating Deployments & friends.
  - PodDisruptionBudget
  - Service

  # Everything that will spawn pods.
  - CronJob
  - DaemonSet
  - Deployment
  - StatefulSet

  # Other.
  - HorizontalPodAutoscaler
  - Ingress

selectors:
  kinds:
    - ClusterRole
    - ClusterRoleBinding
    - ConfigMap
    - CronJob
    - CustomResourceDefinition
    - DaemonSet
    - Deployment
    - HorizontalPodAutoscaler
    - Ingress
    - Namespace
    - PersistentVolumeClaim
    - PodDisruptionBudget
    - Role
    - RoleBinding
    - Secret
    - Service
    - ServiceAccount
    - StatefulSet
  namespaces: ["default"]       # Use empty list to target all namespaces.
  labels: []                    # Target all labels.

# GET will create a folder hierachy by name, app label and resource kind.
groupby:
  label: app
  order: [ns, label, kind]

filters:
  _common_:
    - metadata:
      - annotations:
        - deployment.kubernetes.io/revision
        - kubectl.kubernetes.io/last-applied-configuration
        - kubernetes.io/change-cause
      - creationTimestamp
      - generation
      - resourceVersion
      - selfLink
      - uid
    - status
  ConfigMap:
    - metadata:
      - annotations
      - control-plane.alpha.kubernetes.io/leader
  Deployment: []
  HorizontalPodAutoscaler:
    - metadata:
      - annotations:
        - autoscaling.alpha.kubernetes.io/conditions
        - autoscaling.alpha.kubernetes.io/current-metrics
        - control-plane.alpha.kubernetes.io/leader
  Service:
    - spec:
      - ports:
        - nodePort
